/**
    gameboard.h
    Author: Hanna Dutkiewicz
*/

#ifndef GAMEBOARD_H
#define GAMEBOARD_H

#include <QObject>
#include "field.hpp"

/**
    @class GameBoard
    @author Hanna Dutkiewicz
    Represents a game board of a "Tic-Tac-Toe" game.
  */
class GameBoard: public QObject{
    Q_OBJECT

    friend class GameWindow;

/********* PRIVATE FIELDS **********/
private:
    /** All the fields on a board game */
    Field ** field_;
    /** A pointer to a graphics scene */
    QGraphicsScene * scene_;

/********* PUBLIC METHODS **********/
public:
    /**
      A constructor, creates a GameBoard with a graphics scene attached to it.
      @param scene pointer to QGraphicsScene on which the game board will be drawn
      @param parent pointer to object's parent
      */
   GameBoard(QGraphicsScene * scene, QObject * parent = 0);

   /**
     A destructor.
     */
    ~GameBoard();

    /**
      Method is called to start a new game. It clears current scene and creates new fields on it.
      */
    void startNewGame();

    /**
      Method called when a game is finished to stop the game, actualize game tree and show the winner.
      */
    void endGame();

/********* PUBLIC SLOTS **********/
public slots:
    /**
      Slot connected to signal generated by single field when it was clicked.
      The logic of the game is handled by this method.
      */
    void fieldWasClicked();

/********* PRIVATE METHODS **********/
private:
    void clear();



/********* CONSTS **********/
private:
    /** Maximum fields in a row of a game board */
    static const int MAX_IN_A_ROW = 3;

};

#endif // GAMEBOARD_H
